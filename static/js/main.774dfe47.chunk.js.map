{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","query","setQuery","queryError","setQueryError","changeQuery","useCallback","event","target","value","onFindMovie","trim","findMovie","result","Response","onAddMovie","preventDefault","onSubmit","htmlFor","type","id","placeholder","onChange","onClick","App","setMovies","addMovieFromServer","newMovie","some","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.774dfe47.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const key = '5ad7b015';\n\nconst API_URL = 'https://www.omdbapi.com/';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}?apikey=${key}&t=${title}`);\n\n  return response.json();\n};\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  useCallback,\n  useState,\n} from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [queryError, setQueryError] = useState('');\n\n  const changeQuery = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setQueryError('');\n  }, []);\n\n  const onFindMovie = useCallback(() => {\n    if (!query.trim()) {\n      setQueryError('Please enter a title');\n    } else {\n      const findMovie = async () => {\n        const result = await getMovie(query);\n\n        if (result.Response === 'True') {\n          setMovie(result);\n          setQueryError('');\n        } else {\n          setQueryError('Can not find a movie with such a title');\n        }\n      };\n\n      findMovie();\n    }\n  }, [query]);\n\n  const onAddMovie = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!queryError && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  }, [movie, queryError]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onAddMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={changeQuery}\n            />\n          </div>\n\n          {queryError && (\n            <p className=\"help is-danger\">\n              {queryError}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieFromServer = useCallback((newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    } else {\n      alert('Ooops...You already have this movie, enjoy!'); // eslint-disable-line\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && <MoviesList movies={movies} />}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovieFromServer} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}